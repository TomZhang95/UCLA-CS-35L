Generating a file called "rand" that contains 10,000,000 random single-precision 
floating point numbers without any white spaces:
od -An -f -w1 -N 40000000 < /dev/urandom > 1.txt
tr -s ' ' '\n' < 1.txt > rand

The result of time are:
$ time -p sort -g rand > /dev/null
real 20.86
user 112.48
sys 0.51

$ time -p sort -g --parallel=1 rand > /dev/null
real 106.03
user 105.84
sys 0.18

$ time -p sort -g --parallel=2 rand > /dev/null
real 57.61
user 109.59
sys 0.36

$ time -p sort -g --parallel=4 rand > /dev/null
real 33.07
user 111.45
sys 0.39

$ time -p sort -g --parallel=8 rand > /dev/null
real 21.60
user 113.79
sys 3.05

We can see that the more parallel lines we use, the shorter real time it took, but 
the system calls time consuming would be more at the same time.
